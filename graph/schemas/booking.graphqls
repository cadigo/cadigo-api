# GraphQL Basic enum

# GraphQL schema Type
# Booking

type BookingData {
  data: [Booking!]!
  pagination: PaginationType!
}

type Booking {
  reference: String
  cancellationReference: String
  clientReference: String
  creationDate: String
  status: String
  creationUser: String
  remark: String
  totalSellingRate: Int
  totalNet: Int
  pendingAmount: Int
}

# GraphQl schema Input
# GetBookingInput
input GetBookingInput {
  bookingReference: String
  language: LanguageEnum!
}

# GraphQl schema Input
# BookingsHistoryInput
input BookingsHistoryInput {
  language: LanguageEnum!
  pagination: PaginationInput!
}

# GraphQl schema Input
# BookingInput
input BookingInput {
  clientReference: String
  language: LanguageEnum!
}

# Query
extend type Query {
  getBooking(input: GetBookingInput!): Booking!
  getBookingsHistory(input: BookingsHistoryInput!): BookingData!
}

# Mutation

extend type Mutation {
  booking(input: BookingInput!): Booking!
}
