type Payment {
  payLinkId: Int
  productImage: String
  productName: String
  productDescription: String
  amount: Int
  currency: String
  createdDate: String
  startDate: String
  expiredDate: String
  paymentLimit: Int
  status: String
  payLinkToken: String
  paymentUrl: String
  qrImage: String
}

# GetPaymentInput
input GetPaymentInput {
  language: LanguageEnum!
  id: String
}

# input PaymentInput {
#   amount: Int!
#   productName: String!
#   productDescription: String!
#   bookingID: String!
# }

# Query
extend type Query {
  getPayment(input: GetPaymentInput!): Payment!
}

# Mutation
# extend type Mutation {
  # payment(input: PaymentInput!): Payment!
# }
